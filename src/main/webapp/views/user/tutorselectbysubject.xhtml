<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
	xmlns:b="http://bootsfaces.net/ui" xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:common="http://xmlns.jcp.org/jsf/composite/common"
	template="/WEB-INF/submenutemplate.xhtml">

	<ui:define name="head">
		<script type="text/javascript">
	$(function() {
        // we get a normal Location object
        /*
         * Note, this is the only difference when using this library,
         * because the object window.location cannot be overriden,
         * so library the returns generated "location" object within
         * an object window.history, so get it out of "history.location".
         * For browsers supporting "history.pushState" get generated
         * object "location" with the usual "window.location".
         */
        var location = window.history.location || window.location;

        // looking for all the links and hang on the event, all references in this document
        $(document).on('click', 'a.ajax', function() {
          // keep the link in the browser history
          history.pushState(null, null, this.href);
          // here can cause data loading, etc.

          // do not give a default action
          return false;
        });
        
        // hang on popstate event triggered by pressing back/forward in browser
        $(window).on('popstate', function(e) {

          // here can cause data loading, etc.

          // just post          
          var hiddenURL = location.href;
          document.getElementById('hiddenNavigation').value = hiddenURL;
          hiddenNavigationCmd();
          //alert("We returned to the page with a link: " + location.href);
        });
      });	  
		    function handleComplete(val) {  
		        window.location.hash = val;
		    }  
    </script>
	</ui:define>
	<ui:define name="metadata">
		<f:metadata>
			<f:viewAction
				action="#{tutorSignupController.onPageLoad(countryBean.selectedCountry)}" />
		</f:metadata>
	</ui:define>

	<ui:define name="content">

	 	<!-- Left Column 
		<div class="Container20 NoPadding Responsive100">
			<div class="Container100">
				<div class="Card ui-fluid">
					<b:inputText rendered="false" />
				</div>
			</div>
		</div> -->

		<!-- Center Column -->
		<div class="Container50 NoPadding Responsive50">
			<div class="Container100">
				<div class="Card Flex FlexWrap">
					<h:inputHidden id="hiddenNavigation"
						value="#{studentController.hiddenURL}" />
					<p:remoteCommand name="hiddenNavigationCmd"
						process="hiddenNavigation,@this"
						actionListener="#{studentController.populateNavigationURL()}"
						update="@([id$=searchlandingpageoutputpanel])" />
					<p:outputPanel>
						<p:panel id="selectSubjectPanel"
							header="Browse Students By Subject"
							styleClass="customPanel panelHeaderStyle">
							<p:panelGrid columns="6"
								style="background-color: #F0F8FF !important;" layout="grid"
								styleClass="ui-panelgrid-blank selectBySubjectPanelGrid">
								<c:forEach items="#{tutorController.tutorSearch.subjectList}"
									var="subject">
									<p:column>
										<p:commandLink
											action="#{tutorController.selectTutorBySubject(subject)}"
											oncomplete="handleComplete('#{subject.name}')"
											update="@([id$=searchlandingpageoutputpanel])" ajax="true">
											<h:outputText value="#{subject.name}" />
										</p:commandLink>
									</p:column>
								</c:forEach>
							</p:panelGrid>
						</p:panel>
					</p:outputPanel>
				</div>
			</div>
		</div>
		<div class="Container50 NoPadding Responsive50">
			<p:outputPanel id="searchlandingpageoutputpanel"
				styleClass="width100percent">
				<h:panelGrid id="tutorlistformpanelgrid">
					<p:row>
						<c:choose>
							<c:when
								test="#{fn:length(tutorController.tutorSearch.fetchedTutorList) gt 0 and tutorController.type eq 'tutors'}">
								<ui:include src="/views/tutor/tutorlistform.xhtml"></ui:include>
							</c:when>
							<c:when test="#{tutorController.type eq 'tutor'}">
								<ui:include src="/views/tutor/tutorindividualform.xhtml"></ui:include>
							</c:when>
						</c:choose>
					</p:row>
				</h:panelGrid>
			</p:outputPanel>
		</div>
	</ui:define>

</ui:composition>